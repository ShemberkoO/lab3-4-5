// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using webapi.Models;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(DtpBdLabsContext))]
    partial class DtpBdLabsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "transport_type", new[] { "car", "truck", "motorcycle", "scooter", "pedestrian" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("webapi.Models.Accident", b =>
                {
                    b.Property<int>("AccidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("accident_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccidentId"));

                    b.Property<DateOnly>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("location");

                    b.Property<int?>("NumberOfInjured")
                        .HasColumnType("integer");

                    b.HasKey("AccidentId")
                        .HasName("accidents_pkey");

                    b.ToTable("accidents", (string)null);
                });

            modelBuilder.Entity("webapi.Models.OccupantTransport", b =>
                {
                    b.Property<int>("VictimId")
                        .HasColumnType("integer")
                        .HasColumnName("victim_id");

                    b.Property<string>("DriverLicenseNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("driver_license_number");

                    b.Property<int>("TransportId")
                        .HasColumnType("integer")
                        .HasColumnName("transport_id");

                    b.HasKey("VictimId")
                        .HasName("occupant_transport_pkey");

                    b.HasIndex("TransportId");

                    b.ToTable("occupant_transport", (string)null);
                });

            modelBuilder.Entity("webapi.Models.Person", b =>
                {
                    b.Property<string>("PasportId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pasport_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("patronymic");

                    b.Property<string>("RegistrationAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("registration_address");

                    b.HasKey("PasportId")
                        .HasName("person_pkey");

                    b.ToTable("person", (string)null);
                });

            modelBuilder.Entity("webapi.Models.Transport", b =>
                {
                    b.Property<int>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transport_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransportId"));

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("brand");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("model");

                    b.Property<string>("OwnerId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("owner_id");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("registration_number");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type");

                    b.Property<int?>("YearOfManufacture")
                        .HasColumnType("integer")
                        .HasColumnName("year_of_manufacture");

                    b.HasKey("TransportId")
                        .HasName("transport_pkey");

                    b.HasIndex("OwnerId");

                    b.ToTable("transport", (string)null);
                });

            modelBuilder.Entity("webapi.Models.Victim", b =>
                {
                    b.Property<int>("VictimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("victim_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VictimId"));

                    b.Property<int?>("AccidentId")
                        .HasColumnType("integer")
                        .HasColumnName("accident_id");

                    b.Property<string>("PasportId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pasport_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'неушкоджений'::character varying");

                    b.HasKey("VictimId")
                        .HasName("victims_pkey");

                    b.HasIndex("AccidentId");

                    b.HasIndex("PasportId");

                    b.ToTable("victims", (string)null);
                });

            modelBuilder.Entity("webapi.Models.Violation", b =>
                {
                    b.Property<int>("ViolationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("violation_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ViolationId"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("article");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int?>("VictimId")
                        .HasColumnType("integer")
                        .HasColumnName("victim_id");

                    b.HasKey("ViolationId")
                        .HasName("violations_pkey");

                    b.HasIndex("VictimId");

                    b.ToTable("violations", (string)null);
                });

            modelBuilder.Entity("webapi.Models.OccupantTransport", b =>
                {
                    b.HasOne("webapi.Models.Transport", "Transport")
                        .WithMany("OccupantTransports")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("occupant_transport_transport_id_fkey");

                    b.HasOne("webapi.Models.Victim", "Victim")
                        .WithOne("OccupantTransport")
                        .HasForeignKey("webapi.Models.OccupantTransport", "VictimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("occupant_transport_victim_id_fkey");

                    b.Navigation("Transport");

                    b.Navigation("Victim");
                });

            modelBuilder.Entity("webapi.Models.Transport", b =>
                {
                    b.HasOne("webapi.Models.Person", "Owner")
                        .WithMany("Transports")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("transport_owner_id_fkey");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("webapi.Models.Victim", b =>
                {
                    b.HasOne("webapi.Models.Accident", "Accident")
                        .WithMany("Victims")
                        .HasForeignKey("AccidentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("victims_accident_id_fkey");

                    b.HasOne("webapi.Models.Person", "Pasport")
                        .WithMany("Victims")
                        .HasForeignKey("PasportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("victims_pasport_id_fkey");

                    b.Navigation("Accident");

                    b.Navigation("Pasport");
                });

            modelBuilder.Entity("webapi.Models.Violation", b =>
                {
                    b.HasOne("webapi.Models.Victim", "Victim")
                        .WithMany("Violations")
                        .HasForeignKey("VictimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("violations_victim_id_fkey");

                    b.Navigation("Victim");
                });

            modelBuilder.Entity("webapi.Models.Accident", b =>
                {
                    b.Navigation("Victims");
                });

            modelBuilder.Entity("webapi.Models.Person", b =>
                {
                    b.Navigation("Transports");

                    b.Navigation("Victims");
                });

            modelBuilder.Entity("webapi.Models.Transport", b =>
                {
                    b.Navigation("OccupantTransports");
                });

            modelBuilder.Entity("webapi.Models.Victim", b =>
                {
                    b.Navigation("OccupantTransport");

                    b.Navigation("Violations");
                });
#pragma warning restore 612, 618
        }
    }
}
